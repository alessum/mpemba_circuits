name: Run & Commit runnerU1_pure.py

on:
  workflow_dispatch:
    inputs:
      circuit_to_run:
        description: Circuit index (integer)
        required: true
        type: number
      number_of_circuits:
        description: How many circuits to run
        default: 10
        type: number
      theta_to_run:
        description: Theta to run (float)
        default: 0
        type: number

permissions:
  contents: write

jobs:
  simulate-and-commit:
    runs-on: ubuntu-latest
    steps:

      - name: Format theta_over_pi
        id: fmt
        run: |
          python - << 'EOF'
          import math, os
          theta = float(os.environ['INPUT_THETA_TO_RUN'])
          print(f"theta_str={theta/math.pi:.2f}")
          EOF
        shell: bash

      # ← export this output so that checkout can see it
      - name: Export formatted theta
        run: echo "theta_str=${{ steps.fmt.outputs.theta_str }}" >> $GITHUB_OUTPUT

      - name: Ensure results folders exist
        run: |
          mkdir -p results/renyi/U1/theta${{ steps.fmt.outputs.theta_str }}/T10/circuit_real${{ github.event.inputs.circuit_to_run }}
          mkdir -p results/norms_s/U1/theta${{ steps.fmt.outputs.theta_str }}/T10/circuit_real${{ github.event.inputs.circuit_to_run }}
          mkdir -p results/evo/U1/theta${{ steps.fmt.outputs.theta_str }}/T10/circuit_real${{ github.event.inputs.circuit_to_run }}      

      - name: Checkout code (sparse)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            /*
            !/results/**
            /results/renyi/U1/theta${{ steps.fmt.outputs.theta_str }}/T10/circuit_real${{ github.event.inputs.circuit_to_run }}
            /results/norms_s/U1/theta${{ steps.fmt.outputs.theta_str }}/T10/circuit_real${{ github.event.inputs.circuit_to_run }}
            /results/evo/U1/theta${{ steps.fmt.outputs.theta_str }}/T10/circuit_real${{ github.event.inputs.circuit_to_run }}

      - name: Run simulations
        run: |
          start=${{ github.event.inputs.circuit_to_run }}
          count=${{ github.event.inputs.number_of_circuits }}
          end=$(( start + count - 1 ))
          for i in $(seq $start $end); do
            python runnerU1_pure.py \
              --circuit_to_run $i \
              --theta_to_run ${{ github.event.inputs.theta_to_run }}
          done

      - name: Upload results for this circuit
        uses: actions/upload-artifact@v4
        with:
          name: U1-results
          path: |
            results/renyi/U1/theta${{ steps.fmt.outputs.theta_str }}/T10/circuit_real${{ github.event.inputs.circuit_to_run }}

            results/norms_s/U1/theta${{ steps.fmt.outputs.theta_str }}/T10/circuit_real${{ github.event.inputs.circuit_to_run }}

            results/evo/U1/theta${{ steps.fmt.outputs.theta_str }}/T10/circuit_real${{ github.event.inputs.circuit_to_run }}
