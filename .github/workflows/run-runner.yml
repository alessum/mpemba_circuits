name: Run & Commit runnerU1_pure.py

on:
  workflow_dispatch:
    inputs:
      circuit_to_run:
        description: 'Circuit index (integer)'
        required: true
        type: number

permissions:
  contents: write   # grant write access to GITHUB_TOKEN

jobs:
  prepare-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Upload U1_theta files
        uses: actions/upload-artifact@v3
        with:
          name: theta-data
          path: data/U1_theta*    # glob all your big theta .npz files


  simulate-and-commit:
    needs: prepare-data
    runs-on: ubuntu-latest

    steps:
      # 1) Sparse‑checkout all your code and small files—never the big thetas
      - name: Checkout code (sparse)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            *                 # include everything…
            !data/U1_theta*   # …except data/U1_theta* files

      # 2) Pull down the big theta files into data/ on‑demand
      - name: Download theta-data artifact
        uses: actions/download-artifact@v3
        with:
          name: theta-data
          path: data/       # now data/U1_theta*.npz reappear in your workspace

      # 3) Your normal setup + run loop
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run runnerU1_pure.py for next 10 circuits
        run: |
          start=${{ github.event.inputs.circuit_to_run }}
          end=$(( start + 10 ))
          for i in $(seq $start $end); do
            python runnerU1_pure.py --circuit_to_run $i
          done

      # 4) Commit ONLY your newly generated files (never the original thetas)
      - name: Auto‑commit changed files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Auto‑commit new simulation results'
          add: 'data/output*'    # or whatever your runner generates
